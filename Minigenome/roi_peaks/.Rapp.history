sum(id & dist>7000)
sum(id & d>7000)
x=read.csv('~/Downloads/data_2021-Apr-16.csv')
head(x)
barplot(cbind(rev(x$cumVaccinationFirstDoseUptakeByPublishDatePercentage),rev(x$cumVaccinationSecondDoseUptakeByPublishDatePercentage)))
barplot(rbind(rev(x$cumVaccinationFirstDoseUptakeByPublishDatePercentage),rev(x$cumVaccinationSecondDoseUptakeByPublishDatePercentage)))
barplot(rbind(rev(x$cumVaccinationFirstDoseUptakeByPublishDatePercentage),rev(x$cumVaccinationSecondDoseUptakeByPublishDatePercentage)),ylim=c(0,100))
nchar('NTATATTTCTTTCATTATCAGGTCTCTCTTTAAGAAAAAAAGAAAGACAC')
569144612/4
x=read.delim('~/Downloads/rye_TEs.txt',as.is=T)
head(x)
nrow(x)
d=x$pos_end-x$pos_start
sum(d)
sum(d,na.rm=T)
hist(x$age)
x = read.delim('~/Downloads/L1Hs_5kb_trend.txt')
head(x)
brd4.u = x$L1Hs.BRD4.unique/x$L1Hs.H4K16.unique#
k27.u = x$L1Hs.H3K27ac.unique/x$L1Hs.H4K16.unique#
msl1.u = x$L1Hs.MSL1.unique/x$L1Hs.H4K16.unique#
#
brd4.a = x$L1Hs.BRD4.all/x$L1Hs.H4K16.all#
k27.a = x$L1Hs.H3K27ac.all/x$L1Hs.H4K16.all#
msl1.a = x$L1Hs.MSL1.all/x$L1Hs.H4K16.all
par(mfrow=c(1,2))#
plot(x$Position, brd4.u,type='l', lwd=2, col='blue')#
lines(x$Position, k27.u, lwd=2, col='red')#
lines(x$Position, msl1.u, lwd=2, col='grey')#
#
plot(x$Position, brd4.a,type='l', lwd=2, col='blue')#
lines(x$Position, k27.a, lwd=2, col='red')#
lines(x$Position, msl1.a, lwd=2, col='grey')
plot(x$Position, brd4.u,type='l', lwd=2, col='blue', ylim=c(0,3.5))#
lines(x$Position, k27.u, lwd=2, col='red')#
lines(x$Position, msl1.u, lwd=2, col='grey')#
#
plot(x$Position, brd4.a,type='l', lwd=2, col='blue', ylim=c(0,3.5))#
lines(x$Position, k27.a, lwd=2, col='red')#
lines(x$Position, msl1.a, lwd=2, col='grey')
par(mfrow=c(1,2))#
plot(x$Position, x$L1Hs.BRD4.unique,type='l', lwd=2, col='blue')#
lines(x$Position, x$L1Hs.H3K27ac.unique, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.unique, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.BRD4.all,type='l', lwd=2, col='blue')#
lines(x$Position, x$L1Hs.H3K27ac.all, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.all, lwd=2, col='grey')
plot(x$Position, x$L1Hs.BRD4.unique,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1Hs.H3K27ac.unique, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.unique, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.BRD4.all,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1Hs.H3K27ac.all, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.all, lwd=2, col='grey')
plot(x$Position, brd4.u,type='l', lwd=2, col='blue', ylim=c(0,3.5),#
	xlab='Relative position', ylab='Enrichment', main='Unique')#
lines(x$Position, k27.u, lwd=2, col='red')#
lines(x$Position, msl1.u, lwd=2, col='grey')#
#
plot(x$Position, brd4.a,type='l', lwd=2, col='blue', ylim=c(0,3.5),#
	xlab='Relative position', ylab='Enrichment', main='All')#
lines(x$Position, k27.a, lwd=2, col='red')#
lines(x$Position, msl1.a, lwd=2, col='grey')
x = read.delim('~/Downloads/L1Hs_5kb_trend.txt')#
##plot#
#
par(mfrow=c(1,2))#
plot(x$Position, x$L1Hs.BRD4.unique.dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1Hs.H3K27ac.unique.dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.unique.dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.BRD4.all.dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1Hs.H3K27ac.all.dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.all.dedup, lwd=2, col='grey')
par(mfrow=c(1,2))#
plot(x$Position, x$L1Hs.BRD4.unique.dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1Hs.H3K27ac.unique.dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.unique.dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.BRD4.all.dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1Hs.H3K27ac.all.dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.all.dedup, lwd=2, col='grey')
head(x)
max(x[,2])
par(mfrow=c(1,2))#
plot(x$Position, x$L1Hs.BRD4.unique_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1Hs.H3K27ac.unique_dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.unique_dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.BRD4.all_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1Hs.H3K27ac.all_dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.MSL1.all_dedup, lwd=2, col='grey')
par(mfrow=c(1,2))#
plot(x$Position, x$L1Hs.PA2.BRD4.unique_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1Hs.PA2.H3K27ac.unique_dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.PA2.MSL1.unique_dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1Hs.PA2.BRD4.all_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1Hs.PA2.H3K27ac.all_dedup, lwd=2, col='red')#
lines(x$Position, x$L1Hs.PA2.MSL1.all_dedup, lwd=2, col='grey')
par(mfrow=c(1,2))#
plot(x$Position, x$L1HS.PA2.BRD4.unique_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1HS.PA2.H3K27ac.unique_dedup, lwd=2, col='red')#
lines(x$Position, x$L1HS.PA2.MSL1.unique_dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1HS.PA2.BRD4.all_dedup,type='l', lwd=2, col='blue', ylim=c(0,40),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1HS.PA2.H3K27ac.all_dedup, lwd=2, col='red')#
lines(x$Position, x$L1HS.PA2.MSL1.all_dedup, lwd=2, col='grey')
plot(x$Position, x$L1HS.PA2.BRD4.unique_dedup,type='l', lwd=2, col='blue', ylim=c(0,15),#
	xlab='Relative position', ylab='Norm. read count', main='Unique')#
lines(x$Position, x$L1HS.PA2.H3K27ac.unique_dedup, lwd=2, col='red')#
lines(x$Position, x$L1HS.PA2.MSL1.unique_dedup, lwd=2, col='grey')#
#
plot(x$Position, x$L1HS.PA2.BRD4.all_dedup,type='l', lwd=2, col='blue', ylim=c(0,15),#
	xlab='Relative position', ylab='Norm. read count', main='All')#
lines(x$Position, x$L1HS.PA2.H3K27ac.all_dedup, lwd=2, col='red')#
lines(x$Position, x$L1HS.PA2.MSL1.all_dedup, lwd=2, col='grey')
brd4.u = x$L1HS.PA2.BRD4.unique_dedup/x$L1HS.PA2.H4K16.unique_dedup#
k27.u = x$L1HS.PA2.H3K27ac.unique_dedup/x$L1HS.PA2.H4K16.unique_dedup#
msl1.u = x$L1HS.PA2.MSL1.unique_dedup/x$L1HS.PA2.H4K16.unique_dedup#
#
brd4.a = x$L1HS.PA2.BRD4.all_dedup/x$L1HS.PA2.H4K16.all_dedup#
k27.a = x$L1HS.PA2.H3K27ac.all_dedup/x$L1HS.PA2.H4K16.all_dedup#
msl1.a = x$L1HS.PA2.MSL1.all_dedup/x$L1HS.PA2.H4K16.all_dedup#
##plot ratio#
#
par(mfrow=c(1,2))#
plot(x$Position, brd4.u,type='l', lwd=2, col='blue', ylim=c(0,3.5),#
	xlab='Relative position', ylab='Enrichment', main='Unique')#
lines(x$Position, k27.u, lwd=2, col='red')#
lines(x$Position, msl1.u, lwd=2, col='grey')#
#
plot(x$Position, brd4.a,type='l', lwd=2, col='blue', ylim=c(0,3.5),#
	xlab='Relative position', ylab='Enrichment', main='All')#
lines(x$Position, k27.a, lwd=2, col='red')#
lines(x$Position, msl1.a, lwd=2, col='grey')
plot(x$Position, brd4.u,type='l', lwd=2, col='blue', ylim=c(0.5,3),#
	xlab='Relative position', ylab='Enrichment', main='Unique')#
lines(x$Position, k27.u, lwd=2, col='red')#
lines(x$Position, msl1.u, lwd=2, col='grey')#
#
plot(x$Position, brd4.a,type='l', lwd=2, col='blue', ylim=c(0.5,3),#
	xlab='Relative position', ylab='Enrichment', main='All')#
lines(x$Position, k27.a, lwd=2, col='red')#
lines(x$Position, msl1.a, lwd=2, col='grey')
?wilcox.test
x=c(1,3,3,4,5,6)
y=c(3,5,4,7,8,5)
wilcox.tet(x,y)
wilcox.test(x,y)
wt=wilcox.test(x,y)
str(wt)
wt$p.value
wilcox.test(x,y)$p.value
p = c(0.001,0.003,0.05)
p.adjust(p, method='BH')
?wilcox.test
plot(1:100,type='l')
plot(1:100,type='h')
plot(rep(1,100),type='h',lwd=3)
plot(rep(1,100),type='h',lwd=3,col=hcl(100))
?heat
?heat.col
?heat.cols
??heat
?rainbow
plot(rep(1,100),type='h',lwd=3,col=hcl.colors(100))
cj=read.delim('~/Downloads/temp.txt')
hg=read.delim('~/Downloads/temp_hg38.txt')
head(cj)
plot(cj$Position,cj[,2],type='l',lwd=2,col='blue')
lines(cj[,1],cj[,3],col='red',lwd=2)
plot(cj$Position,cj[,3],type='l',lwd=2,col='blue')
lines(cj[,1],cj[,2],col='red',lwd=2)
plot(cj$Position,cj[,3],type='l',lwd=2,col='blue',ylim=c(0,1))
lines(cj[,1],cj[,2],col='red',lwd=2)
lines(cj[,1],cj[,4],col='grey',lwd=2)
cj=hg
plot(cj$Position,cj[,3],type='l',lwd=2,col='blue',ylim=c(0,2))
plot(cj$Position,cj[,3],type='l',lwd=2,col='blue',ylim=c(0,4))
plot(cj$Position,cj[,3],type='l',lwd=2,col='blue',ylim=c(0,3))
lines(cj[,1],cj[,2],col='red',lwd=2)
lines(cj[,1],cj[,4],col='grey',lwd=2)
paste(rev(strsplit('ed.negnibeut-inu.dem@niL.naneZ',split='')),collapse='')
paste(rev(unlist(strsplit('ed.negnibeut-inu.dem@niL.naneZ',split=''))),collapse='')
x=read.delim('~/Downloads/activeTEs_dbSNP_TFBS.txt.gz')
head(x)
y=x[!is.na(x$snp2tfbs),]
nrow(y)
write.table(y,'temp.txt',quote=F,sep='\t',row.names=F)
library('tidyverse')
acc = tibble(reads=c('all','recov'),#
	mean.acc=c(99.608,93.608),#
	sd.acc=c(0.015,0.129))
acc
ggplot(acc, aes(mean.acc)) +#
	geom_bar()
ggplot(acc, aes(y=mean.acc)) +#
	geom_bar()
ggplot(acc, aes(mean.acc)) +#
	geom_bar(stat='identity', width=0.8)
ggplot(acc, aes(y=mean.acc)) +#
	geom_bar(stat='identity', width=0.8)
ggplot(acc, aes(reads,mean.acc)) +#
	geom_bar(stat='identity', width=0.8)
ggplot(acc, aes(reads,mean.acc)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8)
ggplot(acc, aes(reads,mean.acc)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8, fill='lightblue', col='black')
ggplot(acc, aes(reads,mean.acc)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8, fill='lightblue', col='black') +#
	geom_errorbar(aes(ymin=mean.acc-sd.acc, ymax=mean.acc+sd.acc))
ggplot(acc, aes(reads,mean.acc)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8, fill='lightblue') +#
	geom_errorbar(aes(ymin=mean.acc-sd.acc, ymax=mean.acc+sd.acc), width=0.2)
gen = tibble(reads=rep(c('all','recov'),each=3),#
	d=rep(c('10kb','20kb','40kb'),2)#
	acc=c(99.6,93.6,99.4,92.9,99,92.4))
gen = tibble(reads=rep(c('all','recov'),each=3),#
	d=rep(c('10kb','20kb','40kb'),2),#
	acc=c(99.6,93.6,99.4,92.9,99,92.4))
gen
gen = tibble(reads=rep(c('all','recov'),3),#
	d=rep(c('10kb','20kb','40kb'),each=2),#
	acc=c(99.6,93.6,99.4,92.9,99,92.4))
gen
ggplot(gen, aes(reads,acc,fill=d)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8, col='black')
ggplot(gen, aes(reads,acc,fill=d)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') +#
	geom_bar(stat='identity', width=0.8, col='black', position=position_dodge())
?labs
ggplot(gen, aes(reads,acc,fill=d)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') + labs(fill='')#
	geom_bar(stat='identity', width=0.8, col='black', position=position_dodge())
ggplot(gen, aes(reads,acc,fill=d)) +#
	theme_classic() +#
	xlab('') + ylab('Accuracy') + labs(fill='') +#
	geom_bar(stat='identity', width=0.8, col='black', position=position_dodge())
112106122+753386+5749274
x=read.delim('Downloads/out.bed',header=F)
head(x)
hist(x$V5)
x=read.delim('Downloads/test.txt',header=F)
head(x)
plot(x$V5,x$V6)
cov=x$V3/x$V2
plot(cov,x$V6)
plot(log2(cov),x$V6)
plot(cov,x$V6)
x=read.delim('Downloads/sim-1-unpaired_unmatched.bed',as.is=T)
head(x)
hist(x$dist)
hist(x$dist[x$dist<1e9])
hist(log10(x$dist))
hist(log10(x$dist),main='',xlab='sim-maped distance')
hist(log10(x$dist),main='',xlab='sim-mapped distance')
sum(x$dist<100)
sum(x$dist<100)/nrow(x)
r2=grep('_2',x$id)
hist(log10(x$dist[r2]),main='',xlab='sim-mapped distance')
r2=grepl('_2',x$id)
hist(log10(x$dist[!r2]),main='',xlab='sim-mapped distance')
hist(log10(x$dist[r2]),main='',xlab='sim-mapped distance')
hist(log10(x$dist[!r2]),main='',xlab='sim-mapped distance')
2^10
nchar('gatccGGGATAAGTCAAACCTCACTTCAAGAGAGTGAGGTTTGACTTATCCCTTTTTTCCCGGGg')
x=read.delim('Downloads/temp_matched_intersect.bed',header=F,as.is=T)
head(x)
id=paste(x$V1,x$V2,sep='_')
id=factor(paste(x$V1,x$V2,sep='_'))
which(tapply(id,id,length)>1)
id[132]
x[x$V1=='chr1' & x$V2==101108309,]
512*0.6
828*0.6
82*0.6
82*0.7
512*0.7
213*320/230
205/736
12/178
3/40
1/13
1036/583
106/583
60/473
35/342
22/247
t=c(5:10,15,20)
fdr=c(28,18,13,10,9,7,8,8)
plot(t,fdr,pch-19,cex=0.5)
plot(t,fdr,pch=19,cex=0.5)
9.2/5.4*157
setwd('Downloads/peaks/')
library(tidyverse)
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer())
data
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())
data = tibble(roi=character(), cutoff=integer(), nondup=integer(), ori=integer(), dup=integer())
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())
t=5
sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE)
sub
sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>% select('X9','X10')
sub
sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>%#
		select('X9','X10') %>%#
		add_column(read_tsv(paste('ori_over_',t,'.txt', sep=''), col_names=FALSE))$X10 %>%#
		add_column(read_tsv(paste('dup_over_',t,'.txt', sep=''), col_names=FALSE))$X10
sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>%#
		select('X9','X10') %>%#
		add_column(read_tsv(paste('ori_over_',t,'.txt', sep=''), col_names=FALSE)$X10) %>%#
		add_column(read_tsv(paste('dup_over_',t,'.txt', sep=''), col_names=FALSE)$X10)
sub
sub = add_column(sub, rep(t,nrow(sub)))
sub
data = rbind(data, sub)
data
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())
colnames(sub) = colnames(data)
sub
data = rbind(data, sub)
data
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())#
#
for (t in 5:15) {#
	sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>%#
		select('X9','X10') %>%#
		add_column(read_tsv(paste('ori_over_',t,'.txt', sep=''), col_names=FALSE)$X10) %>%#
		add_column(read_tsv(paste('dup_over_',t,'.txt', sep=''), col_names=FALSE)$X10)#
	sub = add_column(sub, rep(t,nrow(sub)))#
	colnames(sub) = colnames(data)#
	data = rbind(data, sub)#
}
data
sub
960*11
sum(data$nondup==0 & data$ori>0)
sum(data$nondup==0 & data$dup>0)
data = data %>% mutate(correct=(nondup>0 & ori>0), incorrect=(nondup>0 & dup>0))
data
data %>% group_by('cutoff') %>% summarise(recov=sum)
data %>% group_by(cutoff) %>% summarise(recov=sum)
data %>% group_by(cutoff) %>% summarise(recov=sum(correct)/sum(nondup>0))
data %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
summary = data %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
summary %>% ggplot(aes(recov,fdr)) +#
	geom_point()
summary %>% ggplot(aes(cutoff,fdr)) +#
	geom_point()
summary %>% ggplot(aes(cutoff,recov)) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov)) +#
	geom_point()
group_by(data, cutoff) %>% summarise(total=sum(nondup>0))
group_by(data, cutoff) %>% summarise(total=sum(ori>0))
data
mutate(data, dist=unlist(lapply(strsplit(roi,'\\"'), function(x) x[2])))
data=mutate(data, dist=unlist(lapply(strsplit(roi,'\\"'), function(x) x[2])))
data
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())#
#
for (t in 5:15) {#
	sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>%#
		select('X9','X10') %>%#
		add_column(read_tsv(paste('ori_over_',t,'.txt', sep=''), col_names=FALSE)$X10) %>%#
		add_column(read_tsv(paste('dup_over_',t,'.txt', sep=''), col_names=FALSE)$X10)#
	sub = add_column(sub, rep(t,nrow(sub)))#
	colnames(sub) = colnames(data)#
	data = rbind(data, sub)#
}#
data = data %>% mutate(correct=(nondup>0 & ori>0), incorrect=(nondup>0 & dup>0),#
	dist=as.integer(unlist(lapply(strsplit(roi,'\\"'), function(x) x[2]))))
data
summary = data %>% filter(dist>=10000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
summary
data %>% filter(dist>=10000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
data %>% filter(dist>=15000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
summary %>% ggplot(aes(fdr,recov), colour=cutoff) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov)) +#
	geom_point(shape=cutoff)
summary %>% ggplot(aes(fdr,recov)) +#
	geom_point(aes(shape=cutoff))
summary %>% ggplot(aes(fdr,recov)) +#
	geom_point(aes(shape=as.factor(cutoff)))
summary %>% ggplot(aes(fdr,recov)) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary = data %>% filter(dist>=10000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary = data %>% filter(dist>=5000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary = data %>% filter(dist>=15000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
data
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point() +#
	geom_line()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point() +
geom_line()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary
summary = data %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
data = tibble(roi=character(), nondup=integer(), ori=integer(), dup=integer(), cutoff=integer())#
#
for (t in 1:10) {#
	sub = read_tsv(paste('nondup_over_',t,'.txt', sep=''), col_names=FALSE) %>%#
		select('X9','X10') %>%#
		add_column(read_tsv(paste('ori_over_',t,'.txt', sep=''), col_names=FALSE)$X10) %>%#
		add_column(read_tsv(paste('dup_over_',t,'.txt', sep=''), col_names=FALSE)$X10)#
	sub = add_column(sub, rep(t,nrow(sub)))#
	colnames(sub) = colnames(data)#
	data = rbind(data, sub)#
}#
data = data %>% mutate(correct=(nondup>0 & ori>0), incorrect=(nondup>0 & dup>0),#
	dist=as.integer(unlist(lapply(strsplit(roi,'\\"'), function(x) x[2]))))
data
summary = data %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary = data %>% filter(dist>=15000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary = data %>% filter(dist>=20000) %>% group_by(cutoff) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)#
#
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	geom_point()
summary %>% ggplot(aes(fdr,recov,colour=cutoff)) +#
	xlab('False positive rate') +#
	ylab('True positive rate') +#
	geom_point()
summary
x = summary$fdr[2:10] - summary$fdr[1:9]
x
x = summary$fdr[1:9] - summary$fdr[2:10]
x
y = summary$recov[1:9] + summary$recov[2:10]
y
a = 0.5*x*y
a
sum(a)
summary2 = data %>% filter(cutoff==6) %>% group_by(dist) %>%#
	summarise(recov=sum(correct)/sum(nondup>0)*100, fdr=sum(incorrect)/sum(correct)*100)
summary2
summary2 %>% ggplot(aes(fdr,recov,colour=dist)) +#
	xlab('False positive rate') +#
	ylab('True positive rate') +#
	geom_point()
summary2 %>% ggplot(aes(dist,fdr) +#
	xlab('d') +#
	ylab('False positive rate') +#
	geom_point()
)
summary2 %>% ggplot(aes(dist,fdr)) +#
	xlab('d') +#
	ylab('False positive rate') +#
	geom_point()
summary2 %>% ggplot(aes(dist,recov)) +#
	xlab('d') +#
	ylab('False positive rate') +#
	geom_point()
